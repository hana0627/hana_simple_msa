server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-service:8761/eureka # eurekaClient 등록위치

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/user-service/v2/** #Path 정보를 지정
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: AuthorizationHeaderFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/v1/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: board-service
          uri: lb://board-service #등록된 MicroService 이름
          predicates: # 조건절과 같은 의미
            - Path=/board-service/v2/** #Path 정보를 지정
          filters:
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}
            - name: AuthorizationHeaderFilter

        - id: board-service
          uri: lb://BOARD-SERVICE
          predicates:
            - Path=/board-service/v1/**
          filters:
            - RewritePath=/board-service/(?<segment>.*), /$\{segment}

jwt:
  secret-key: ${SECRET_KEY}
  #30min
  token.expired-time-ms: 1800
  refresh.expired-time-ms: 4000
